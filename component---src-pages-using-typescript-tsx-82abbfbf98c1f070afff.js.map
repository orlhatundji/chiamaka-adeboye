{"version":3,"file":"component---src-pages-using-typescript-tsx-82abbfbf98c1f070afff.js","mappings":"2NAaA,MAgCaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAlCwDC,IAAAA,IAAC,KACvDC,EAAI,SACJC,GACD,SACCL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAAA,mBACkBA,EAAAA,cAAAA,IAAAA,KAAAA,0BAElBA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,YAAqB,0CAClCA,EAAAA,cAAAA,OAAAA,KAAAA,YAAqB,qCACzCA,EAAAA,cAAAA,OAAAA,KAAAA,oBAA6B,MAEvCA,EAAAA,cAAAA,IAAAA,KAAAA,4CAC2CA,EAAAA,cAAAA,OAAAA,KAAAA,cAAuB,oBACxDA,EAAAA,cAAAA,OAAAA,KAAAA,cAAuB,gBAAaA,EAAAA,cAAAA,OAAAA,KAAAA,YAAqB,UAEnEA,EAAAA,cAAAA,IAAAA,KAAAA,gCAC+BA,EAAAA,cAAAA,OAAAA,KAAOK,EAASE,UAAgB,uBACnDH,EAAKI,KAAKC,UAAS,KAE/BT,EAAAA,cAAAA,IAAAA,KAAAA,kCACkC,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAuE,kCAE3E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAG,2BACL,C,+EChBX,MAvBe,QAAC,UAAEC,GAAW,SAC3B,0BAAQC,UAAU,0FAChB,uBAAKA,UAAU,8EACb,gBAAC,EAAAH,KAAI,CAACC,GAAG,KACP,wBAAME,UAAU,iBAAe,qBAEjC,sBAAIA,UAAU,8EACZ,sBAAIA,UAAU,IACZ,gBAAC,EAAAH,KAAI,CAACC,GAAG,KAAG,SAEd,sBAAIE,UAAU,IACZ,gBAAC,EAAAH,KAAI,CAACC,GAAG,UAAQ,UAEnB,sBAAIE,UAAU,IAEZ,gBAAC,EAAAH,KAAI,CAACC,GAAG,WAAS,aAIxB,uBAAKE,UAAU,SACR,ECaX,MAxBe,IAAmB,IAAD,MAAjB,SAAEC,GAAU,EAC1B,MAAMX,GAAOY,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACH,WAAiC,QAAtB,EAAAT,EAAKI,KAAKS,oBAAY,aAAtB,EAAwBf,QAAK,UAChD,uBAAKY,UAAU,4BACb,wBAAMA,UAAU,mBAAmBC,GACnC,0BAAQD,UAAU,eAChB,qBAAGA,UAAU,yDAAuD,8CAGvE,C,+CCYP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEI,EAAW,MAAEhB,EAAK,SAAEa,GAAU,EAC3C,MAAM,KAAEP,IAASQ,EAAAA,EAAAA,gBAAe,YAc1BG,EAAkBD,GAAeV,EAAKS,aAAaC,YACnDE,EAAgC,QAApB,EAAGZ,EAAKS,oBAAY,aAAjB,EAAmBf,MAExC,OACE,gCACE,6BAAQkB,EAAkBlB,EAAK,MAAMkB,EAAiBlB,GACtD,wBAAMmB,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASpB,IACnC,wBAAMqB,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAd,EAAKS,oBAAY,aAAjB,EAAmBO,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASpB,IACpC,wBAAMmB,KAAK,sBAAsBC,QAASH,IACzCJ,EAGP,C","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"bg-foreground border-b border-black relative flex flex-col items-center justify-center\">\n    <div className=\"container fixed flex self-center items-center justify-between py-8 mx-auto\">\n      <Link to=\"/\">\n        <span className=\"font-semibold\">Chiamaka Adeboye</span>\n      </Link>\n      <ul className=\"flex items-center justify-between gap-x-6 text-primary text-base leading-4\">\n        <li className=\"\">\n          <Link to=\"/\">Work</Link>\n        </li>\n        <li className=\"\">\n          <Link to=\"/about\">About</Link>\n        </li>\n        <li className=\"\">\n          \n          <Link to=\"/resume\">Resume</Link>\n        </li>\n      </ul>\n    </div>\n    <div className=\"h-20\"></div>\n  </header>\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Header from \"./header\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div className=\"h-screen overflow-scroll\">\n        <main className=\"overflow-scroll\">{children}</main>\n        <footer className=\"py-10 mb-20\">\n          <p className=\"text-base leading-[4.75rem] text-center mb-20 lg:mb-0\">Copyright © 2022. Made with ❤️ in Lagos.</p>\n        </footer>\n      </div>\n    </>\n  );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","siteTitle","className","children","useStaticQuery","siteMetadata","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}